(self.webpackChunkflasher=self.webpackChunkflasher||[]).push([[883],{5076:(t,e,a)=>{"use strict";a.r(e),a.d(e,{ESPFlasher:()=>c});var i=a(734),s=a(345),r=a(7885);const _={15736195:()=>a.e(104).then(a.bind(a,104)),1763790959:()=>a.e(258).then(a.bind(a,3258)),456216687:()=>a.e(258).then(a.bind(a,3258)),9:()=>a.e(205).then(a.bind(a,9205)),1990:()=>a.e(182).then(a.bind(a,3182)),4293968129:()=>a.e(447).then(a.bind(a,7447))};class h{ESP_RAM_BLOCK=6144;ESP_FLASH_BEGIN=2;ESP_FLASH_DATA=3;ESP_FLASH_END=4;ESP_MEM_BEGIN=5;ESP_MEM_END=6;ESP_MEM_DATA=7;ESP_WRITE_REG=9;ESP_READ_REG=10;ESP_SPI_ATTACH=13;ESP_CHANGE_BAUDRATE=15;ESP_FLASH_DEFL_BEGIN=16;ESP_FLASH_DEFL_DATA=17;ESP_FLASH_DEFL_END=18;ESP_SPI_FLASH_MD5=19;ESP_ERASE_FLASH=208;ESP_ERASE_REGION=209;ESP_RUN_USER_CODE=211;ESP_IMAGE_MAGIC=233;ESP_CHECKSUM_MAGIC=239;ROM_INVALID_RECV_MSG=5;ERASE_REGION_TIMEOUT_PER_MB=3e4;ERASE_WRITE_TIMEOUT_PER_MB=4e4;MD5_TIMEOUT_PER_MB=8e3;CHIP_ERASE_TIMEOUT=12e4;MAX_TIMEOUT=2*this.CHIP_ERASE_TIMEOUT;CHIP_DETECT_MAGIC_REG_ADDR=1073745920;DETECTED_FLASH_SIZES={18:"256KB",19:"512KB",20:"1MB",21:"2MB",22:"4MB",23:"8MB",24:"16MB"};constructor(t,e,a,i=115200){this.transport=t,this.baudrate=e,this.terminal=a,this.rom_baudrate=i,this.IS_STUB=!1,this.chip=null,a&&this.terminal.clear(),this.log("esptool.js v0.1-dev"),this.log("Serial port "+this.transport.get_info())}_sleep(t){return new Promise((e=>setTimeout(e,t)))}log(t){this.terminal?this.terminal.writeln(t):console.log(t)}write_char(t){this.terminal?this.terminal.write(t):console.log(t)}_short_to_bytearray(t){return[255&t,t>>8&255]}_int_to_bytearray(t){return[255&t,t>>8&255,t>>16&255,t>>24&255]}_bytearray_to_short(t,e){return t|e>>8}_bytearray_to_int(t,e,a,i){return t|e<<8|a<<16|i<<24}_appendBuffer(t,e){var a=new Uint8Array(t.byteLength+e.byteLength);return a.set(new Uint8Array(t),0),a.set(new Uint8Array(e),t.byteLength),a.buffer}_appendArray(t,e){var a=new Uint8Array(t.length+e.length);return a.set(t,0),a.set(e,t.length),a}ui8ToBstr(t){var e,a=t.length,i="";for(e=0;e<a;e++)i+=String.fromCharCode(t[e]);return i}bstrToUi8(t){for(var e=t.length,a=new Uint8Array(e),i=0;i<e;i++)a[i]=t.charCodeAt(i);return a}flush_input=async()=>{try{await this.transport.readRaw({timeout:200})}catch(t){}};command=async({op:t=null,data:e=[],chk:a=0,wait_response:i=!0,timeout:r=3e3}={})=>{if(null!=t){var _,h=new Uint8Array(8+e.length);for(h[0]=0,h[1]=t,h[2]=this._short_to_bytearray(e.length)[0],h[3]=this._short_to_bytearray(e.length)[1],h[4]=this._int_to_bytearray(a)[0],h[5]=this._int_to_bytearray(a)[1],h[6]=this._int_to_bytearray(a)[2],h[7]=this._int_to_bytearray(a)[3],_=0;_<e.length;_++)h[8+_]=e[_];await this.transport.write(h)}if(i){for(let e=0;e<100;e++){var n=await this.transport.read({timeout:r});const e=n[0],a=n[1],i=(this._bytearray_to_short(n[2],n[3]),this._bytearray_to_int(n[4],n[5],n[6],n[7])),_=n.slice(8);if(1==e){if(null==t||a==t)return[i,_];if(0!=_[0]&&_[1]==this.ROM_INVALID_RECV_MSG)throw await this.flush_input(),new s.l("unsupported command error")}}throw new s.l("invalid response")}};read_reg=async({addr:t,timeout:e=3e3}={})=>{var a=this._int_to_bytearray(t);return(await this.command({op:this.ESP_READ_REG,data:a,timeout:e}))[0]};write_reg=async({addr:t,value:e,mask:a=4294967295,delay_us:i=0,delay_after_us:s=0}={})=>{var r=this._appendArray(this._int_to_bytearray(t),this._int_to_bytearray(e));r=this._appendArray(r,this._int_to_bytearray(a)),r=this._appendArray(r,this._int_to_bytearray(i)),s>0&&(r=this._appendArray(r,this._int_to_bytearray(this.chip.UART_DATE_REG_ADDR)),r=this._appendArray(r,this._int_to_bytearray(0)),r=this._appendArray(r,this._int_to_bytearray(0)),r=this._appendArray(r,this._int_to_bytearray(s))),await this.check_command({op_description:"write target memory",op:this.ESP_WRITE_REG,data:r})};sync=async()=>{console.log("Sync");var t,e=new Uint8Array(36);for(e[0]=7,e[1]=7,e[2]=18,e[3]=32,t=0;t<32;t++)e[4+t]=85;try{return await this.command({op:8,data:e,timeout:100})}catch(t){throw console.log("Sync err "+t),t}};_connect_attempt=async({mode:t="default_reset",esp32r0_delay:e=!1}={})=>{console.log("_connect_attempt "+t+" "+e),"no_reset"!==t&&(await this.transport.setDTR(!1),await this.transport.setRTS(!0),await this._sleep(100),e&&await this._sleep(2e3),await this.transport.setDTR(!0),await this.transport.setRTS(!1),await this._sleep(50),await this.transport.setDTR(!1));for(var a=0;;){try{a+=(await this.transport.read({timeout:1e3})).length}catch(t){if(t instanceof s.W)break}await this._sleep(50)}this.transport.slip_reader_enabled=!0;for(a=7;a--;){try{await this.sync();return"success"}catch(t){t instanceof s.W&&(e?this.write_char("_"):this.write_char("."))}await this._sleep(50)}return"error"};connect=async({mode:t="default_reset",attempts:e=7,detecting:a=!1}={})=>{var i,r;for(this.chip=null,this.write_char("Connecting..."),await this.transport.connect({baud:this.rom_baudrate}),i=0;i<e&&"success"!==(r=await this._connect_attempt({mode:t,esp32r0_delay:!1}))&&"success"!==(r=await this._connect_attempt({mode:t,esp32r0_delay:!0}));i++);if("success"!==r)throw new s.l("Failed to connect with the device");if(this.write_char("\n"),this.write_char("\r"),await this.flush_input(),!a){var h=await this.read_reg({addr:1073745920})>>>0;if(console.log("Chip Magic "+h.toString(16)),!(h in _))throw new s.l(`Unexpected CHIP magic value ${h}. Failed to autodetect chip type.`);this.chip=(await _[h]()).default}};detect_chip=async({mode:t="default_reset"}={})=>{await this.connect({mode:t}),this.write_char("Detecting chip type... "),null!=this.chip&&this.log(this.chip.CHIP_NAME)};check_command=async({op_description:t="",op:e=null,data:a=[],chk:i=0,timeout:s=3e3}={})=>{console.log("check_command "+t);var r=await this.command({op:e,data:a,chk:i,timeout:s});return r[1].length>4?r[1]:r[0]};mem_begin=async(t,e,a,i)=>{console.log("mem_begin "+t+" "+e+" "+a+" "+i.toString(16));var s=this._appendArray(this._int_to_bytearray(t),this._int_to_bytearray(e));s=this._appendArray(s,this._int_to_bytearray(a)),s=this._appendArray(s,this._int_to_bytearray(i)),await this.check_command({op_description:"enter RAM download mode",op:this.ESP_MEM_BEGIN,data:s})};checksum=function(t){var e,a=239;for(e=0;e<t.length;e++)a^=t[e];return a};mem_block=async(t,e)=>{var a=this._appendArray(this._int_to_bytearray(t.length),this._int_to_bytearray(e));a=this._appendArray(a,this._int_to_bytearray(0)),a=this._appendArray(a,this._int_to_bytearray(0)),a=this._appendArray(a,t);var i=this.checksum(t);await this.check_command({op_description:"write to target RAM",op:this.ESP_MEM_DATA,data:a,chk:i})};mem_finish=async t=>{var e=0===t?1:0,a=this._appendArray(this._int_to_bytearray(e),this._int_to_bytearray(t));await this.check_command({op_description:"leave RAM download mode",op:this.ESP_MEM_END,data:a,timeout:50})};flash_spi_attach=async t=>{var e=this._int_to_bytearray(t);await this.check_command({op_description:"configure SPI flash pins",op:this.ESP_SPI_ATTACH,data:e})};timeout_per_mb=function(t,e){var a=t*(e/1e6);return a<3e3?3e3:a};flash_begin=async(t,e)=>{var a=Math.floor((t+this.FLASH_WRITE_SIZE-1)/this.FLASH_WRITE_SIZE),i=this.chip.get_erase_size(e,t),s=new Date,r=s.getTime(),_=3e3;0==this.IS_STUB&&(_=this.timeout_per_mb(this.ERASE_REGION_TIMEOUT_PER_MB,t)),console.log("flash begin "+i+" "+a+" "+this.FLASH_WRITE_SIZE+" "+e+" "+t);var h=this._appendArray(this._int_to_bytearray(i),this._int_to_bytearray(a));h=this._appendArray(h,this._int_to_bytearray(this.FLASH_WRITE_SIZE)),h=this._appendArray(h,this._int_to_bytearray(e)),0==this.IS_STUB&&(h=this._appendArray(h,this._int_to_bytearray(0))),await this.check_command({op_description:"enter Flash download mode",op:this.ESP_FLASH_BEGIN,data:h,timeout:_});var n=s.getTime();return 0!=t&&0==this.IS_STUB&&this.log("Took "+(n-r)/1e3+"."+(n-r)%1e3+"s to erase flash block"),a};flash_defl_begin=async(t,e,a)=>{var i=Math.floor((e+this.FLASH_WRITE_SIZE-1)/this.FLASH_WRITE_SIZE),s=Math.floor((t+this.FLASH_WRITE_SIZE-1)/this.FLASH_WRITE_SIZE),r=new Date,_=r.getTime();let h,n;this.IS_STUB?(h=t,n=3e3):(h=s*this.FLASH_WRITE_SIZE,n=this.timeout_per_mb(this.ERASE_REGION_TIMEOUT_PER_MB,h)),this.log("Compressed "+t+" bytes to "+e+"...");var o=this._appendArray(this._int_to_bytearray(h),this._int_to_bytearray(i));o=this._appendArray(o,this._int_to_bytearray(this.FLASH_WRITE_SIZE)),o=this._appendArray(o,this._int_to_bytearray(a)),"ESP32-S2"!==this.chip.CHIP_NAME&&"ESP32-S3"!==this.chip.CHIP_NAME&&"ESP32-C3"!==this.chip.CHIP_NAME||!1!==this.IS_STUB||(o=this._appendArray(o,this._int_to_bytearray(0))),await this.check_command({op_description:"enter compressed flash mode",op:this.ESP_FLASH_DEFL_BEGIN,data:o,timeout:n});var l=r.getTime();return 0!=t&&!1===this.IS_STUB&&this.log("Took "+(l-_)/1e3+"."+(l-_)%1e3+"s to erase flash block"),i};flash_block=async(t,e,a)=>{var i=this._appendArray(this._int_to_bytearray(t.length),this._int_to_bytearray(e));i=this._appendArray(i,this._int_to_bytearray(0)),i=this._appendArray(i,this._int_to_bytearray(0)),i=this._appendArray(i,t);var s=this.checksum(t);await this.check_command({op_description:"write to target Flash after seq "+e,op:this.ESP_FLASH_DATA,data:i,chk:s,timeout:a})};flash_defl_block=async(t,e,a)=>{var i=this._appendArray(this._int_to_bytearray(t.length),this._int_to_bytearray(e));i=this._appendArray(i,this._int_to_bytearray(0)),i=this._appendArray(i,this._int_to_bytearray(0)),i=this._appendArray(i,t);var s=this.checksum(t);console.log("flash_defl_block "+t[0].toString(16),0+t[1].toString(16)),await this.check_command({op_description:"write compressed data to flash after seq "+e,op:this.ESP_FLASH_DEFL_DATA,data:i,chk:s,timeout:a})};flash_finish=async({reboot:t=!1}={})=>{var e=t?0:1,a=this._int_to_bytearray(e);await this.check_command({op_description:"leave Flash mode",op:this.ESP_FLASH_END,data:a})};flash_defl_finish=async({reboot:t=!1}={})=>{var e=t?0:1,a=this._int_to_bytearray(e);await this.check_command({op_description:"leave compressed flash mode",op:this.ESP_FLASH_DEFL_END,data:a})};run_spiflash_command=async(t,e,a)=>{var i,r=this.chip.SPI_REG_BASE,_=r+0,h=r+this.chip.SPI_USR_OFFS,n=r+this.chip.SPI_USR1_OFFS,o=r+this.chip.SPI_USR2_OFFS,l=r+this.chip.SPI_W0_OFFS;i=null!=this.chip.SPI_MOSI_DLEN_OFFS?async(t,e)=>{var a=r+this.chip.SPI_MOSI_DLEN_OFFS,i=r+this.chip.SPI_MISO_DLEN_OFFS;t>0&&await this.write_reg({addr:a,value:t-1}),e>0&&await this.write_reg({addr:i,value:e-1})}:async(t,e)=>{var a=n,i=(0===e?0:e-1)<<8|(0===t?0:t-1)<<17;await this.write_reg({addr:a,value:i})};var c=1<<18;if(a>32)throw new s.l("Reading more than 32 bits back from a SPI flash operation is unsupported");if(e.length>64)throw new s.l("Writing more than 64 bytes of data with one SPI command is unsupported");var d,p=8*e.length,y=await this.read_reg({addr:h}),S=await this.read_reg({addr:o}),m=1<<31;a>0&&(m|=1<<28),p>0&&(m|=1<<27),await i(p,a),await this.write_reg({addr:h,value:m});var g=7<<28|t;if(await this.write_reg({addr:o,value:g}),0==p)await this.write_reg({addr:l,value:0});else{if(e.length%4!=0){var f=new Uint8Array(e.length%4);e=this._appendArray(e,f)}var E=l;for(d=0;d<e.length-4;d+=4)g=this._bytearray_to_int(e[d],e[d+1],e[d+2],e[d+3]),await this.write_reg({addr:E,value:g}),E+=4}for(await this.write_reg({addr:_,value:c}),d=0;d<10&&0!=(g=await this.read_reg({addr:_})&c);d++);if(10===d)throw new s.l("SPI command did not complete in time");var u=await this.read_reg({addr:l});return await this.write_reg({addr:h,value:y}),await this.write_reg({addr:o,value:S}),u};read_flash_id=async()=>{var t=new Uint8Array(0);return await this.run_spiflash_command(159,t,24)};erase_flash=async()=>{this.log("Erasing flash (this may take a while)...");var t=new Date;let e=t.getTime(),a=await this.check_command({op_description:"erase flash",op:this.ESP_ERASE_FLASH,timeout:this.CHIP_ERASE_TIMEOUT}),i=(t=new Date).getTime();return this.log("Chip erase completed successfully in "+(i-e)/1e3+"s"),a};toHex(t){return Array.prototype.map.call(t,(t=>("00"+t.toString(16)).slice(-2))).join("")}flash_md5sum=async(t,e)=>{let a=this.timeout_per_mb(this.MD5_TIMEOUT_PER_MB,e);var i=this._appendArray(this._int_to_bytearray(t),this._int_to_bytearray(e));i=this._appendArray(i,this._int_to_bytearray(0)),i=this._appendArray(i,this._int_to_bytearray(0));let s=await this.check_command({op_description:"calculate md5sum",op:this.ESP_SPI_FLASH_MD5,data:i,timeout:a});return s.length>16&&(s=s.slice(0,16)),this.toHex(s)};run_stub=async()=>{this.log("Uploading stub...");var t=atob(this.chip.ROM_TEXT),e=t.split("").map((function(t){return t.charCodeAt(0)})),a=new Uint8Array(e),i=r.ZP.inflate(a);e=(t=atob(this.chip.ROM_DATA)).split("").map((function(t){return t.charCodeAt(0)}));var _,h=new Uint8Array(e),n=Math.floor((i.length+this.ESP_RAM_BLOCK-1)/this.ESP_RAM_BLOCK);for(await this.mem_begin(i.length,n,this.ESP_RAM_BLOCK,this.chip.TEXT_START),_=0;_<n;_++){var o=(l=_*this.ESP_RAM_BLOCK)+this.ESP_RAM_BLOCK;await this.mem_block(i.slice(l,o),_)}for(n=Math.floor((h.length+this.ESP_RAM_BLOCK-1)/this.ESP_RAM_BLOCK),await this.mem_begin(h.length,n,this.ESP_RAM_BLOCK,this.chip.DATA_START),_=0;_<n;_++){var l;o=(l=_*this.ESP_RAM_BLOCK)+this.ESP_RAM_BLOCK;await this.mem_block(h.slice(l,o),_)}this.log("Running stub..."),await this.mem_finish(this.chip.ENTRY);for(let t=0;t<100;t++){const t=await this.transport.read({timeout:1e3,min_data:6});if(79===t[0]&&72===t[1]&&65===t[2]&&73===t[3])return this.log("Stub running..."),this.IS_STUB=!0,this.FLASH_WRITE_SIZE=16384,this.chip}throw new s.l("Failed to start stub. Unexpected response")};change_baud=async()=>{this.log("Changing baudrate to "+this.baudrate);let t=this.IS_STUB?this.transport.baudrate:0,e=this._appendArray(this._int_to_bytearray(this.baudrate),this._int_to_bytearray(t));await this.command({op:this.ESP_CHANGE_BAUDRATE,data:e});this.log("Changed"),await this.transport.disconnect(),await this._sleep(50),await this.transport.connect({baud:this.baudrate});try{await this.transport.rawRead({timeout:500})}catch(t){}};main_fn=async({mode:t="default_reset"}={})=>{await this.detect_chip({mode:t});var e=await this.chip.get_chip_description(this);return this.log("Chip is "+e),this.log("Features: "+await this.chip.get_chip_features(this)),this.log("Crystal is "+await this.chip.get_crystal_freq(this)+"MHz"),this.log("MAC: "+await this.chip.read_mac(this)),await this.chip.read_mac(this),void 0!==this.chip._post_connect&&await this.chip._post_connect(this),await this.run_stub(),await this.change_baud(),e};flash_size_bytes=function(t){let e=-1;return-1!==t.indexOf("KB")?e=1024*parseInt(t.slice(0,t.indexOf("KB"))):-1!==t.indexOf("MB")&&(e=1024*parseInt(t.slice(0,t.indexOf("MB")))*1024),e};parse_flash_size_arg=function(t){if(void 0===this.chip.FLASH_SIZES[t])throw new s.l("Flash size "+t+" is not supported by this chip type. Supported sizes: "+this.chip.FLASH_SIZES);return this.chip.FLASH_SIZES[t]};_update_image_flash_params=function(t,e,a,i,s){if(console.log("_update_image_flash_params "+a+" "+i+" "+s),t.length<8)return t;if(e!=this.chip.BOOTLOADER_FLASH_OFFSET)return t;if("keep"===a&&"keep"===i&&"keep"===s)return console.log("Not changing the image"),t;let r=t[0],_=t[2],h=t[3];if(r!==this.ESP_IMAGE_MAGIC)return this.log("Warning: Image file at 0x"+e.toString(16)+" doesn't look like an image file, so not changing any flash settings."),t;if("keep"!==i){_={qio:0,qout:1,dio:2,dout:3}[i]}if(a_flash_freq=15&h,"keep"!==s){a_flash_freq={"40m":0,"26m":1,"20m":2,"80m":15}[s]}a_flash_size=240&h,"keep"!==a&&(a_flash_size=this.parse_flash_size_arg(a));var n=_<<8|a_flash_freq+a_flash_size;return this.log("Flash params set to "+n.toString(16)),t[2]!==_<<8&&(t[2]=_<<8),t[3]!==a_flash_freq+a_flash_size&&(t[3]=a_flash_freq+a_flash_size),t};write_flash=async({fileArray:t=[],flash_size:e="keep",flash_mode:a="keep",flash_freq:i="keep",erase_all:_=!1,compress:h=!0,reportProgress:n,calculateMD5Hash:o})=>{if(console.log("EspLoader program"),"keep"!==e){let a=this.flash_size_bytes(e);for(var l=0;l<t.length;l++)if(t[l].data.length+t[l].address>a)throw new s.l(`File ${l+1} doesn't fit in the available flash`)}let c,d;!0===this.IS_STUB&&!0===_&&await this.erase_flash();for(l=0;l<t.length;l++){if(console.log("Data Length "+t[l].data.length),c=t[l].data+"ÿÿÿÿ".substring(0,4-t[l].data.length%4),d=t[l].address,console.log("Image Length "+c.length),0===c.length){this.log("Warning: File is empty");continue}let _;c=this._update_image_flash_params(c,d,e,a,i),o&&(_=o(c),console.log("Image MD5 "+_));let y,S=c.length;if(h){let t=this.bstrToUi8(c);c=r.ZP.deflate(t,{level:9}),console.log("Compressed image "),console.log(c),y=await this.flash_defl_begin(S,c.length,d)}else y=await this.flash_begin(S,d);let m=0,g=0;const f=c.length;n&&n(l,0,f);var p=new Date;let E=p.getTime(),u=5e3;for(;c.length>0;){console.log("Write loop "+d+" "+m+" "+y),this.log("Writing at 0x"+(d+m*this.FLASH_WRITE_SIZE).toString(16)+"... ("+Math.floor(100*(m+1)/y)+"%)");let t=c.slice(0,this.FLASH_WRITE_SIZE);if(!h)throw new s.l("Yet to handle Non Compressed writes");{let e=5e3;!1===this.IS_STUB&&(u=e),await this.flash_defl_block(t,m,u),this.IS_STUB&&(u=e)}g+=t.length,c=c.slice(this.FLASH_WRITE_SIZE,c.length),m++,n&&n(l,g,f)}this.IS_STUB&&await this.read_reg({addr:this.CHIP_DETECT_MAGIC_REG_ADDR,timeout:u});let w=(p=new Date).getTime()-E;if(h&&this.log("Wrote "+S+" bytes ("+g+" compressed) at 0x"+d.toString(16)+" in "+w/1e3+" seconds."),o){let t=await this.flash_md5sum(d,S);if(new String(t).valueOf()!=new String(_).valueOf())throw this.log("File  md5: "+_),this.log("Flash md5: "+t),new s.l("MD5 of file does not match data in flash!");this.log("Hash of data verified.")}}this.log("Leaving..."),this.IS_STUB&&(await this.flash_begin(0,0),h?await this.flash_defl_finish():await this.flash_finish())};flash_id=async()=>{console.log("flash_id");var t=await this.read_flash_id();this.log("Manufacturer: "+(255&t).toString(16));var e=t>>16&255;this.log("Device: "+(t>>8&255).toString(16)+e.toString(16)),this.log("Detected flash size: "+this.DETECTED_FLASH_SIZES[e])};hard_reset=async()=>{await this.transport.setDTR(!1),await this.transport.setRTS(!1),await this._sleep(100),await this.transport.setRTS(!0),await this._sleep(100),await this.transport.setRTS(!1)};soft_reset=async()=>{if(this.IS_STUB){if("ESP8266"!=this.chip.CHIP_NAME)throw new s.l("Soft resetting is currently only supported on ESP8266");await this.command({op:this.ESP_RUN_USER_CODE,wait_response:!1})}else await this.flash_begin(0,0),await this.flash_finish(!1)}}var n=a(2180),o=a(1354),l=a.n(o);class c{constructor(t,e,a,i,s,r,_){this.device=t,this.type=e,this.method=a,this.config=i,this.options=s,this.firmwareUrl=r,this.term=_}connect=async()=>{let t,e="default_reset",a=460800;"betaflight"===this.method?(a=42e4,e="no_reset"):"etx"===this.method?(a=230400,e="no_reset"):"uart"===this.method&&"TX"===this.type&&(t=115200);const s=new i.M(this.device,!0);this.esploader=new h(s,a,this.term,void 0===t?a:t),this.esploader.ESP_RAM_BLOCK=2048;const r=new n.Z(s,this.term,this.config.firmware,a);return"uart"===this.method?"RX"===this.type?await s.connect({baud:a}).then((t=>this.esploader._connect_attempt())).then((t=>{if("success"!==t)return s.disconnect().then((t=>s.connect({baud:42e4}))).then((t=>r.reset_to_bootloader()))})):await s.connect({baud:115200}):"betaflight"===this.method?await s.connect({baud:a}).then((t=>r.betaflight())).then((t=>r.reset_to_bootloader())):"etx"===this.method&&await s.connect({baud:a}).then((t=>r.edgeTX())),s.disconnect().then((t=>this.esploader.main_fn({mode:e}))).then((t=>(console.log("Settings done for :"+t),t)))};flash=async(t,e)=>{const a=this.esploader;"etx"!==this.method&&"betaflight"!==this.method||(a.FLASH_WRITE_SIZE=2048);const i=t.map((t=>({data:a.ui8ToBstr(t.data),address:t.address})));return a.write_flash({fileArray:i,flash_size:"keep",erase_all:e,reportProgress:(t,e,a)=>{const i=Math.round(e/a*100);document.getElementById("progressBar").value=i,document.getElementById("status").innerHTML=`Flashing: ${i}% uploaded... please wait`},calculateMD5Hash:t=>l().MD5(l().enc.Latin1.parse(t))}).then((t=>(document.getElementById("progressBar").value=100,document.getElementById("status").innerHTML="Flashing complete","esp32"===this.config.platform?a.hard_reset().catch((()=>{})):a.soft_reset().catch((()=>{})))))}}},2480:()=>{}}]);